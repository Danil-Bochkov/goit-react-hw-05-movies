{"version":3,"file":"static/js/785.ff4a3ba1.chunk.js","mappings":"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","sources":["API.js","components/Loader.jsx","components/MoviesList.jsx","components/SearchBox.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = \"https://api.themoviedb.org/3\";\nconst API_KEY = \"2bb211a44af411c1339a508066d81474\";\nexport const IMG = (path, w) => `https://image.tmdb.org/t/p/w${w}/${path}`;\n\nexport async function getMovies() {  \n  return axios.get(`${BASE_URL}/trending/movie/week?api_key=${API_KEY}`);\n};\n\nexport async function searchMoviesByName(name) {  \n  return axios.get(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${name}`);\n};\n\nexport async function getMovieDetails(id) {  \n  return axios.get(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\n};\n\nexport async function getMovieCredits(id) {  \n  return axios.get(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`);\n};\n\nexport async function getMovieReviews(id) {  \n  return axios.get(`${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`);\n};","import { InfinitySpin } from 'react-loader-spinner';\nimport React from 'react';\n\nexport default function Loader() {\n  return (\n    <div className=\"Loader\">\n      <InfinitySpin width=\"200\" color=\"#4fa94d\" />\n    </div>\n  );\n}\n","import { Link, useLocation } from 'react-router-dom';\n\nexport const MoviesList = ({ movies, movieName }) => {\n  const location = useLocation();\n\n  return (\n    <ul className=\"moviesList\">\n      {movies.map(movie => (\n        <li className=\"moviesList__item\" key={movie?.id}>\n          <Link\n            to={`${movie?.id}`}\n            state={{ from: `${location.pathname}?name=${movieName}` }}\n          >\n            {movie?.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { BiSearch } from 'react-icons/bi';\n\nconst SearchBox = ({ onSubmit }) => {\n  const [formData, setFormData] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (formData === '') return;\n\n    onSubmit(formData);\n    setFormData('');\n  };\n\n  const handleSearch = evt => {\n    setFormData(evt.currentTarget.value);\n  };\n\n  return (\n    <form className=\"search\" onSubmit={handleSubmit}>\n      <input\n        className=\"search__input\"\n        onChange={handleSearch}\n        type=\"text\"\n        value={formData}\n        placeholder=\"Search movies\"\n      />\n      <button type=\"submit\" className=\"search__button\">\n        <BiSearch />\n      </button>\n    </form>\n  );\n};\n\nSearchBox.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchBox;\n","import { useSearchParams } from 'react-router-dom';\nimport { MoviesList } from '../components/MoviesList';\nimport SearchBox from '../components/SearchBox';\nimport { searchMoviesByName } from '../API';\nimport { useEffect, useState } from 'react';\nimport Loader from 'components/Loader';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const movieName = searchParams.get('name') ?? '';\n\n  useEffect(() => {\n    if (!movieName) {\n      return;\n    }\n    setIsLoading(true);\n    searchMoviesByName(movieName)\n      .then(response => setMovies(response.data.results))\n      .finally(() => setIsLoading(false));\n  }, [movieName]);\n\n  const handleSubmit = query => {\n    setSearchParams({ name: query });\n  };\n\n  return (\n    <main className=\"container\">\n      <SearchBox onSubmit={handleSubmit} />\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <MoviesList movies={movies} movieName={movieName} />\n      )}\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["BASE_URL","API_KEY","IMG","path","w","getMovies","axios","searchMoviesByName","name","getMovieDetails","id","getMovieCredits","getMovieReviews","Loader","className","width","color","MoviesList","movies","movieName","location","useLocation","map","movie","to","state","from","pathname","title","onSubmit","useState","formData","setFormData","e","preventDefault","onChange","evt","currentTarget","value","type","placeholder","setMovies","useSearchParams","searchParams","setSearchParams","isLoading","setIsLoading","get","useEffect","then","response","data","results","finally","query"],"sourceRoot":""}