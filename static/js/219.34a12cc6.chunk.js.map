{"version":3,"file":"static/js/219.34a12cc6.chunk.js","mappings":"wPAIMA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,iPAeHE,EAAW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAC7B,OACE,UAACL,EAAD,CAAYI,GAAIA,EAAhB,WACE,SAAC,MAAD,CAAaE,KAAK,OACjBD,IAGN,E,2BCkDD,EApEsB,WAAO,IAAD,IAClBE,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,MAEAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,IACbE,EAAAA,EAAAA,IAAgBR,GACbS,MAAK,SAAAC,GAAQ,OAAIN,EAASM,EAASC,KAAtB,IACbC,SAAQ,kBAAMN,GAAa,EAAnB,GACZ,GAAE,CAACN,IAEJ,IAAMa,GAAWC,EAAAA,EAAAA,MACXC,EAAY,oBAAGF,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAI7C,OAFAC,QAAQC,IAAIN,EAASG,QAGnB,0BACGX,GACC,SAACe,EAAA,EAAD,KAEA,UAAC,EAAAC,SAAD,YACE,SAACzB,EAAD,CAAUC,GAAIkB,EAAd,6BACA,iBAAKO,UAAU,YAAf,WACE,gBACEA,UAAU,mBACVC,KAAU,OAALpB,QAAK,IAALA,OAAA,EAAAA,EAAOqB,eAAeC,EAAAA,EAAAA,IAAG,OAACtB,QAAD,IAACA,OAAD,EAACA,EAAOqB,YAAa,KACnDE,IAAG,OAAEvB,QAAF,IAAEA,OAAF,EAAEA,EAAOwB,QAEd,iBAAKL,UAAU,YAAf,WACE,eAAIA,UAAU,mBAAd,gBAAkCnB,QAAlC,IAAkCA,OAAlC,EAAkCA,EAAOyB,SACzC,kBAAMN,UAAU,oBAAhB,wBACcO,KAAKC,MAA4B,IAAjB,OAAL3B,QAAK,IAALA,OAAA,EAAAA,EAAO4B,eADhC,QAGA,eAAIT,UAAU,+BAAd,uBACA,cAAGA,UAAU,sBAAb,gBAAoCnB,QAApC,IAAoCA,OAApC,EAAoCA,EAAO6B,YAC3C,eAAIV,UAAU,+BAAd,qBACA,gBAAKA,UAAU,mBAAf,gBACGnB,QADH,IACGA,OADH,EACGA,EAAO8B,OAAOC,KAAI,SAAAC,GACjB,OAAO,0BAAsBA,EAAMR,MAAjBQ,EAAMnC,GACzB,aAKP,iBAAKsB,UAAU,iBAAf,WACE,iBAAMA,UAAU,wBAAhB,qCAGA,gBAAIA,UAAU,cAAd,WACE,eAAIA,UAAU,oBAAd,UACE,SAAC,KAAD,CAAMzB,GAAG,OAAT,qBAEF,eAAIyB,UAAU,oBAAd,UACE,SAAC,KAAD,CAAMzB,GAAG,UAAT,2BAGJ,SAAC,EAAAuC,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,aAOb,C","sources":["components/BackLink.jsx","pages/MoviesDetails.jsx"],"sourcesContent":["import { HiArrowLeft } from 'react-icons/hi';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n","import { useParams, useLocation, Link, Outlet } from 'react-router-dom';\nimport { BackLink } from '../components/BackLink';\nimport { getMovieDetails, IMG } from '../API';\nimport { Suspense } from 'react';\nimport { useEffect, useState } from 'react';\nimport { Fragment } from 'react';\nimport Loader from 'components/Loader';\n\nconst MoviesDetails = () => {\n  const { id } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getMovieDetails(id)\n      .then(response => setMovie(response.data))\n      .finally(() => setIsLoading(false));\n  }, [id]);\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  console.log(location.state);\n\n  return (\n    <main>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <Fragment>\n          <BackLink to={backLinkHref}>Back to movies</BackLink>\n          <div className=\"movieCard\">\n            <img\n              className=\"movieCard__image\"\n              src={movie?.poster_path && IMG(movie?.poster_path, 300)}\n              alt={movie?.name}\n            />\n            <div className=\"movieInfo\">\n              <h2 className=\"movieInfo__title\">{movie?.title}</h2>\n              <span className=\"movieInfo__rating\">\n                User Score {Math.round(movie?.vote_average * 10)}%\n              </span>\n              <h3 className=\"movieInfo__title-information\">Overview</h3>\n              <p className=\"movieInfo__overview\">{movie?.overview}</p>\n              <h4 className=\"movieInfo__title-information\">Genres</h4>\n              <div className=\"movieInfo__genre\">\n                {movie?.genres.map(genre => {\n                  return <span key={genre.id}>{genre.name}</span>;\n                })}\n              </div>\n            </div>\n          </div>\n\n          <div className=\"additionalInfo\">\n            <span className=\"additionalInfo__title\">\n              Additional information\n            </span>\n            <ul className=\"listOfLinks\">\n              <li className=\"listOfLinks__item\">\n                <Link to=\"cast\">Cast</Link>\n              </li>\n              <li className=\"listOfLinks__item\">\n                <Link to=\"reviews\">Reviews</Link>\n              </li>\n            </ul>\n            <Suspense fallback={<div>Loading subpage...</div>}>\n              <Outlet />\n            </Suspense>\n          </div>\n        </Fragment>\n      )}\n    </main>\n  );\n};\n\nexport default MoviesDetails;\n"],"names":["StyledLink","styled","Link","BackLink","to","children","size","id","useParams","useState","movie","setMovie","isLoading","setIsLoading","useEffect","getMovieDetails","then","response","data","finally","location","useLocation","backLinkHref","state","from","console","log","Loader","Fragment","className","src","poster_path","IMG","alt","name","title","Math","round","vote_average","overview","genres","map","genre","Suspense","fallback"],"sourceRoot":""}