{"version":3,"file":"static/js/11.d6f8721e.chunk.js","mappings":"qUAEMA,EAAW,+BACXC,EAAU,mCACHC,EAAM,SAACC,EAAMC,GAAP,4CAA4CA,EAA5C,YAAiDD,EAAjD,EAEZ,SAAeE,IAAtB,4CAAO,OAAP,oBAAO,uGACEC,EAAAA,GAAAA,IAAA,UAAaN,EAAb,wCAAqDC,KADvD,kEAIA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAkCC,GAAlC,0FACEF,EAAAA,GAAAA,IAAA,UAAaN,EAAb,iCAA8CC,EAA9C,kBAA+DO,KADjE,kEAIA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,0FACEJ,EAAAA,GAAAA,IAAA,UAAaN,EAAb,kBAA+BU,EAA/B,oBAA6CT,KAD/C,kEAIA,SAAeU,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,0FACEJ,EAAAA,GAAAA,IAAA,UAAaN,EAAb,kBAA+BU,EAA/B,4BAAqDT,KADvD,kEAIA,SAAeW,EAAtB,+CAAO,OAAP,oBAAO,WAA+BF,GAA/B,0FACEJ,EAAAA,GAAAA,IAAA,UAAaN,EAAb,kBAA+BU,EAA/B,4BAAqDT,KADvD,kE,qFCnBQ,SAASY,IACtB,OACE,gBAAKC,UAAU,SAAf,UACE,SAAC,KAAD,CAAcC,MAAM,MAAMC,MAAM,aAGrC,C,yJCLKC,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,iPAeHE,EAAW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAC7B,OACE,UAACL,EAAD,CAAYI,GAAIA,EAAhB,WACE,SAAC,MAAD,CAAaE,KAAK,OACjBD,IAGN,E,SCmBD,EAxCa,WACX,IAAQZ,GAAOc,EAAAA,EAAAA,MAAPd,GACR,GAAwBe,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRnB,EAAAA,EAAAA,IAAgBD,GACbqB,MAAK,SAAAC,GAAQ,OAAIL,EAAQK,EAASC,KAAKP,KAA1B,IACbQ,SAAQ,kBAAML,GAAa,EAAnB,GACZ,GAAE,CAACnB,KAGF,6BACGkB,GACC,SAACf,EAAA,EAAD,IACEa,EAAKS,QACP,eAAIrB,UAAU,OAAd,SACGY,EAAKU,KAAI,YAA4C,IAAzC1B,EAAwC,EAAxCA,GAAIF,EAAoC,EAApCA,KAAM6B,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UACnC,OACE,gBAAaxB,UAAU,WAAvB,WACE,gBACEA,UAAU,kBACVyB,IAAKF,IAAgBnC,EAAAA,EAAAA,IAAImC,EAAc,KACvCG,IAAKhC,IAENA,GACD,2CACa,uBAAI8B,SARV5B,EAYZ,OAGH,8CAIP,ECJD,EAlCgB,WACd,IAAQA,GAAOc,EAAAA,EAAAA,MAAPd,GACR,GAA0Be,EAAAA,EAAAA,UAAS,IAAnC,eAAOgB,EAAP,KAAcC,EAAd,KACA,GAAkCjB,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KASA,OAPAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,IACbjB,EAAAA,EAAAA,IAAgBF,GACbqB,MAAK,SAAAC,GAAQ,OAAIU,EAASV,EAASC,KAAKU,QAA3B,IACbT,SAAQ,kBAAML,GAAa,EAAnB,GACZ,GAAE,CAACnB,KAGF,6BACGkB,GACC,SAACf,EAAA,EAAD,IACE4B,EAAMN,QACR,eAAIrB,UAAU,SAAd,gBACG2B,QADH,IACGA,OADH,EACGA,EAAOL,KAAI,YAA8B,IAA3BQ,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASnC,EAAS,EAATA,GAC9B,OACE,gBAAII,UAAU,eAAd,WACE,gBAAIA,UAAU,iBAAd,qBAAwC8B,MACxC,cAAG9B,UAAU,eAAb,SAA6B+B,MAFGnC,EAKrC,OAGH,iDAIP,E,SC+CD,EA3EsB,WAAO,IAAD,QAClBA,GAAOc,EAAAA,EAAAA,MAAPd,GACR,GAA0Be,EAAAA,EAAAA,UAAS,MAAnC,eAAOqB,EAAP,KAAcC,EAAd,KACA,GAAkCtB,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,MAEAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,IACbpB,EAAAA,EAAAA,IAAgBC,GACbqB,MAAK,SAAAC,GAAQ,OAAIe,EAASf,EAASC,KAAtB,IACbC,SAAQ,kBAAML,GAAa,EAAnB,GACZ,GAAE,CAACnB,IAEJ,IAAMsC,GAAWC,EAAAA,EAAAA,MACXC,EAAY,oBAAGF,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAI7C,OAFAC,QAAQC,IAAIN,EAASG,QAGnB,iBAAMrC,UAAU,YAAhB,SACGc,GACC,SAACf,EAAA,EAAD,KAEA,UAAC,EAAA0C,SAAD,YACE,SAACnC,EAAD,CAAUC,GAAI6B,EAAd,6BACA,iBAAKpC,UAAU,YAAf,WACE,gBACEA,UAAU,mBACVyB,KAAU,OAALO,QAAK,IAALA,OAAA,EAAAA,EAAOU,eAAetD,EAAAA,EAAAA,IAAG,OAAC4C,QAAD,IAACA,OAAD,EAACA,EAAOU,YAAa,KACnDhB,IAAG,OAAEM,QAAF,IAAEA,OAAF,EAAEA,EAAOtC,QAEd,iBAAKM,UAAU,YAAf,WACE,eAAIA,UAAU,mBAAd,gBAAkCgC,QAAlC,IAAkCA,OAAlC,EAAkCA,EAAOW,SACzC,kBAAM3C,UAAU,oBAAhB,wBACc4C,KAAKC,MAA4B,IAAjB,OAALb,QAAK,IAALA,OAAA,EAAAA,EAAOc,eADhC,QAGA,eAAI9C,UAAU,+BAAd,uBACA,cAAGA,UAAU,sBAAb,gBAAoCgC,QAApC,IAAoCA,OAApC,EAAoCA,EAAOe,YAC3C,eAAI/C,UAAU,+BAAd,qBACA,gBAAKA,UAAU,mBAAf,gBACGgC,QADH,IACGA,OADH,EACGA,EAAOgB,OAAO1B,KAAI,SAAA2B,GACjB,OAAO,0BAAsBA,EAAMvD,MAAjBuD,EAAMrD,GACzB,aAKP,iBAAKI,UAAU,iBAAf,WACE,iBAAMA,UAAU,wBAAhB,qCAGA,gBAAIA,UAAU,cAAd,WACE,eAAIA,UAAU,oBAAd,UACE,SAAC,KAAD,CAAMO,GAAG,OAAO8B,MAAO,CAAEC,KAAI,UAAEJ,EAASG,aAAX,aAAE,EAAgBC,MAA/C,qBAIF,eAAItC,UAAU,oBAAd,UACE,SAAC,KAAD,CAAMO,GAAG,UAAU8B,MAAO,CAAEC,KAAI,UAAEJ,EAASG,aAAX,aAAE,EAAgBC,MAAlD,2BAKJ,SAAC,EAAAY,SAAD,CAAUC,UAAU,SAACpD,EAAA,EAAD,IAApB,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOV,KAAM+D,EAAAA,EAAAA,KAAYC,SAAS,SAAC,EAAD,OAClC,SAAC,KAAD,CAAOhE,KAAM+D,EAAAA,EAAAA,QAAeC,SAAS,SAACC,EAAD,kBAQpD,C","sources":["API.js","components/Loader.jsx","components/BackLink.jsx","components/Cast.jsx","components/Review.jsx","pages/MoviesDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = \"https://api.themoviedb.org/3\";\nconst API_KEY = \"2bb211a44af411c1339a508066d81474\";\nexport const IMG = (path, w) => `https://image.tmdb.org/t/p/w${w}/${path}`;\n\nexport async function getMovies() {  \n  return axios.get(`${BASE_URL}/trending/movie/week?api_key=${API_KEY}`);\n};\n\nexport async function searchMoviesByName(name) {  \n  return axios.get(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${name}`);\n};\n\nexport async function getMovieDetails(id) {  \n  return axios.get(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\n};\n\nexport async function getMovieCredits(id) {  \n  return axios.get(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`);\n};\n\nexport async function getMovieReviews(id) {  \n  return axios.get(`${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`);\n};","import { InfinitySpin } from 'react-loader-spinner';\nimport React from 'react';\n\nexport default function Loader() {\n  return (\n    <div className=\"Loader\">\n      <InfinitySpin width=\"200\" color=\"#4fa94d\" />\n    </div>\n  );\n}\n","import { HiArrowLeft } from 'react-icons/hi';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { getMovieCredits, IMG } from 'API';\nimport { useParams } from 'react-router-dom';\nimport Loader from 'components/Loader';\n\nconst Cast = () => {\n  const { id } = useParams();\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    getMovieCredits(id)\n      .then(response => setCast(response.data.cast))\n      .finally(() => setIsLoading(false));\n  }, [id]);\n\n  return (\n    <section>\n      {isLoading ? (\n        <Loader />\n      ) : cast.length ? (\n        <ul className=\"cast\">\n          {cast.map(({ id, name, profile_path, character }) => {\n            return (\n              <li key={id} className=\"castItem\">\n                <img\n                  className=\"castItem__image\"\n                  src={profile_path && IMG(profile_path, 200)}\n                  alt={name}\n                />\n                {name}\n                <span>\n                  Character: <b>{character}</b>\n                </span>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p>No cast available</p>\n      )}\n    </section>\n  );\n};\n\nexport default Cast;\n","import { useState, useEffect } from 'react';\nimport { getMovieReviews } from 'API';\nimport { useParams } from 'react-router-dom';\nimport Loader from 'components/Loader';\n\nconst Reviews = () => {\n  const { id } = useParams();\n  const [users, setUsers] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getMovieReviews(id)\n      .then(response => setUsers(response.data.results))\n      .finally(() => setIsLoading(false));\n  }, [id]);\n\n  return (\n    <section>\n      {isLoading ? (\n        <Loader />\n      ) : users.length ? (\n        <ul className=\"review\">\n          {users?.map(({ author, content, id }) => {\n            return (\n              <li className=\"review__item\" key={id}>\n                <h2 className=\"review__author\">Author: {author}</h2>\n                <p className=\"review__text\">{content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p>No reviews available</p>\n      )}\n    </section>\n  );\n};\n\nexport default Reviews;\n","import { useParams, useLocation, Link, Route, Routes } from 'react-router-dom';\nimport { getMovieDetails, IMG } from '../API';\nimport { useEffect, useState, Fragment, Suspense } from 'react';\nimport { BackLink } from '../components/BackLink';\nimport Loader from 'components/Loader';\nimport Cast from '../components/Cast';\nimport Review from '../components/Review';\nimport route from 'utils/route';\n\nconst MoviesDetails = () => {\n  const { id } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getMovieDetails(id)\n      .then(response => setMovie(response.data))\n      .finally(() => setIsLoading(false));\n  }, [id]);\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  console.log(location.state);\n\n  return (\n    <main className=\"container\">\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <Fragment>\n          <BackLink to={backLinkHref}>Back to movies</BackLink>\n          <div className=\"movieCard\">\n            <img\n              className=\"movieCard__image\"\n              src={movie?.poster_path && IMG(movie?.poster_path, 300)}\n              alt={movie?.name}\n            />\n            <div className=\"movieInfo\">\n              <h2 className=\"movieInfo__title\">{movie?.title}</h2>\n              <span className=\"movieInfo__rating\">\n                User Score {Math.round(movie?.vote_average * 10)}%\n              </span>\n              <h3 className=\"movieInfo__title-information\">Overview</h3>\n              <p className=\"movieInfo__overview\">{movie?.overview}</p>\n              <h4 className=\"movieInfo__title-information\">Genres</h4>\n              <div className=\"movieInfo__genre\">\n                {movie?.genres.map(genre => {\n                  return <span key={genre.id}>{genre.name}</span>;\n                })}\n              </div>\n            </div>\n          </div>\n\n          <div className=\"additionalInfo\">\n            <span className=\"additionalInfo__title\">\n              Additional information\n            </span>\n            <ul className=\"listOfLinks\">\n              <li className=\"listOfLinks__item\">\n                <Link to=\"cast\" state={{ from: location.state?.from }}>\n                  Cast\n                </Link>\n              </li>\n              <li className=\"listOfLinks__item\">\n                <Link to=\"reviews\" state={{ from: location.state?.from }}>\n                  Reviews\n                </Link>\n              </li>\n            </ul>\n            <Suspense fallback={<Loader />}>\n              <Routes>\n                <Route path={route.cast} element={<Cast />} />\n                <Route path={route.reviews} element={<Review />} />\n              </Routes>\n            </Suspense>\n          </div>\n        </Fragment>\n      )}\n    </main>\n  );\n};\n\nexport default MoviesDetails;\n"],"names":["BASE_URL","API_KEY","IMG","path","w","getMovies","axios","searchMoviesByName","name","getMovieDetails","id","getMovieCredits","getMovieReviews","Loader","className","width","color","StyledLink","styled","Link","BackLink","to","children","size","useParams","useState","cast","setCast","isLoading","setIsLoading","useEffect","then","response","data","finally","length","map","profile_path","character","src","alt","users","setUsers","results","author","content","movie","setMovie","location","useLocation","backLinkHref","state","from","console","log","Fragment","poster_path","title","Math","round","vote_average","overview","genres","genre","Suspense","fallback","route","element","Review"],"sourceRoot":""}