{"version":3,"file":"static/js/138.ba40f1f1.chunk.js","mappings":"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","sources":["API.js","components/BackLink.jsx","pages/Cast.jsx","pages/Review.jsx","pages/MoviesDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = \"https://api.themoviedb.org/3\";\nconst API_KEY = \"2bb211a44af411c1339a508066d81474\";\nexport const IMG = (path, w) => `https://image.tmdb.org/t/p/w${w}/${path}`;\n\nexport async function getMovies() {  \n  return axios.get(`${BASE_URL}/trending/movie/week?api_key=${API_KEY}`);\n};\n\nexport async function searchMoviesByName(name) {  \n  return axios.get(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${name}`);\n};\n\nexport async function getMovieDetails(id) {  \n  return axios.get(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\n};\n\nexport async function getMovieCredits(id) {  \n  return axios.get(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`);\n};\n\nexport async function getMovieReviews(id) {  \n  return axios.get(`${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`);\n};","import { HiArrowLeft } from 'react-icons/hi';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: #ffffff;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n  transition: 250ms ease-in-out;\n  &:hover {\n    transform: scale(1.03);\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { getMovieCredits, IMG } from 'API';\nimport { useParams } from 'react-router-dom';\nimport Loader from 'components/Loader';\nimport unknownPerson from '../images/unknown-actor.png';\n\nconst Cast = () => {\n  const { id } = useParams();\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    getMovieCredits(id)\n      .then(response => setCast(response.data.cast))\n      .finally(() => setIsLoading(false));\n  }, [id]);\n\n  return (\n    <section>\n      {isLoading ? (\n        <Loader />\n      ) : cast.length ? (\n        <ul className=\"cast\">\n          {cast.map(({ name, profile_path, character }, id) => {\n            return (\n              <li key={id} className=\"castItem\">\n                {profile_path ? (\n                  <img\n                    className=\"castItem__image\"\n                    src={profile_path && IMG(profile_path, 200)}\n                    alt={name}\n                  />\n                ) : (\n                  <div className=\"castItem__image_unknown\">\n                    <img src={unknownPerson} alt={name} />\n                  </div>\n                )}\n                <div className=\"castItem__info\">\n                  {name}\n                  <span>\n                    Character: <b>{character}</b>\n                  </span>\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p>No cast available</p>\n      )}\n    </section>\n  );\n};\n\nexport default Cast;\n","import { useState, useEffect } from 'react';\nimport { getMovieReviews } from 'API';\nimport { useParams } from 'react-router-dom';\nimport Loader from 'components/Loader';\n\nconst Reviews = () => {\n  const { id } = useParams();\n  const [users, setUsers] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getMovieReviews(id)\n      .then(response => setUsers(response.data.results))\n      .finally(() => setIsLoading(false));\n  }, [id]);\n\n  return (\n    <section>\n      {isLoading ? (\n        <Loader />\n      ) : users.length ? (\n        <ul className=\"review\">\n          {users?.map(({ author, content, id }) => {\n            return (\n              <li className=\"review__item\" key={id}>\n                <h2 className=\"review__author\">\n                  Author: <p>{author}</p>\n                </h2>\n                <p className=\"review__text\">{content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p>No reviews available</p>\n      )}\n    </section>\n  );\n};\n\nexport default Reviews;\n","import { useParams, useLocation, Link, Route, Routes } from 'react-router-dom';\nimport { getMovieDetails, IMG } from '../API';\nimport { useEffect, useState, Fragment, Suspense } from 'react';\nimport { BackLink } from '../components/BackLink';\nimport Loader from 'components/Loader';\nimport Cast from './Cast';\nimport Review from './Review';\nimport route from 'utils/route';\n\nconst MoviesDetails = () => {\n  const { id } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getMovieDetails(id)\n      .then(response => setMovie(response.data))\n      .finally(() => setIsLoading(false));\n  }, [id]);\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  return (\n    <main className=\"container\">\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <Fragment>\n          <BackLink to={backLinkHref}>Back to movies</BackLink>\n          <div className=\"movieCard\">\n            <img\n              className=\"movieCard__image\"\n              src={movie?.poster_path && IMG(movie?.poster_path, 300)}\n              alt={movie?.name}\n            />\n            <div className=\"movieInfo\">\n              <div>\n                <h2 className=\"movieInfo__title\">{movie?.title}</h2>\n                <span className=\"movieInfo__rating\">\n                  User Score {Math.round(movie?.vote_average * 10)}%\n                </span>\n              </div>\n              <div>\n                <h3 className=\"movieInfo__title-information\">Overview</h3>\n                <p className=\"movieInfo__overview\">{movie?.overview}</p>\n              </div>\n              <div>\n                <h4 className=\"movieInfo__title-information\">Genres</h4>\n                <div className=\"movieInfo__genre\">\n                  {movie?.genres.map(genre => {\n                    return (\n                      <span key={genre.id} className=\"movieInfo__genre_text\">\n                        {genre.name}\n                      </span>\n                    );\n                  })}\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"additionalInfo\">\n            <span className=\"additionalInfo__title\">\n              Additional information\n            </span>\n            <ul className=\"listOfLinks\">\n              <li className=\"listOfLinks__item\">\n                <Link to=\"cast\" state={{ from: location.state?.from }}>\n                  Cast\n                </Link>\n              </li>\n              <li className=\"listOfLinks__item\">\n                <Link to=\"reviews\" state={{ from: location.state?.from }}>\n                  Reviews\n                </Link>\n              </li>\n            </ul>\n            <Suspense fallback={<Loader />}>\n              <Routes>\n                <Route path={route.cast} element={<Cast />} />\n                <Route path={route.reviews} element={<Review />} />\n              </Routes>\n            </Suspense>\n          </div>\n        </Fragment>\n      )}\n    </main>\n  );\n};\n\nexport default MoviesDetails;\n"],"names":["BASE_URL","API_KEY","IMG","path","w","getMovies","axios","searchMoviesByName","name","getMovieDetails","id","getMovieCredits","getMovieReviews","StyledLink","styled","Link","BackLink","to","children","size","useParams","useState","cast","setCast","isLoading","setIsLoading","useEffect","then","response","data","finally","Loader","length","className","map","profile_path","character","src","alt","unknownPerson","users","setUsers","results","author","content","movie","setMovie","location","useLocation","backLinkHref","state","from","Fragment","poster_path","title","Math","round","vote_average","overview","genres","genre","Suspense","fallback","route","element","Review"],"sourceRoot":""}